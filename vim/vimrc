" Initialize
" ------------------------------------------------------------
  set nocompatible
  filetype off

" set the runtime path to include Vundle and initialize
  set rtp+=~/.vim/bundle/vundle/
  call vundle#rc()
  " alternatively, pass a path where Vundle should install plugins
  "let path = '~/some/path/here'
  "call vundle#rc(path)

  filetype indent on
  filetype plugin on

" =============== Vundle Initialization ===============
" This loads all the plugins specified in ~/.vim/vundle.vim
" Use Vundle plugin to manage all other plugins
if filereadable(expand("~/.vim/vundles.vim"))
  source ~/.vim/vundles.vim
endif

" Modelines
set modeline
set modelines=3

" Things that help me revert
" ------------------------------------------------------------
  " But No swap files, those are annoying
  set noswapfile
  set nobackup
  set nowb

  " Persistent Undo
  silent !mkdir ~/.vim/backups > /dev/null 2>&1
  set undodir=~/.vim/backups
  set undofile

" Core mappings
" ------------------------------------------------------------

  let mapleader=" "
  imap jk <Esc>

" Powerline runtimepath append stuff that i feel belongs to the plugin folder
" but can't get working when it's there (TODO: get it working under plugins)
" -----------------------------------------------------------
  set rtp+=~/.vim/bundle/powerline/powerline/bindings/vim

" Kawaii stuff
" ------------------------------------------------------------
  " Show line numbers
  set nu

 " Font size
 set guifont=Inconsolata\ for\ Powerline:h14

 " Use 256 colors plz
 set t_Co=256

 " Split character (Default is '|'), yeah there's a trailing whitespace.
 set fillchars+=vert:\

  " Syntax highlighting and ColorSchemes
  syntax on
  set background=dark

  " When using the solarized theme
  " colorscheme solarized
  " let g:solarized_termcolors=256

  " Treat '-' and '_' as word terminators
  set iskeyword-=_
  set iskeyword-=-

" Remaps
" ------------------------------------------------------------

  " Tabs
  nnoremap th :tabnext<CR>
  nnoremap tl :tabprev<CR>
  nnoremap tn :tabnew<CR>

  " Nerdtree
  nnoremap <C-S-n> :NERDTreeToggle<CR>

  " Format fixing remaps
    " Remove whitespace
    nnoremap <Leader>w :%s/\s\+$//e<CR>

" Mouse (LOL!) things
" ------------------------------------------------------------

  " Scrolling
  set mouse=a
  map <ScrollWheelUp> <C-Y>
  map <ScrollWheelDown> <C-E>

" Ignore Syntastic warnings on angular directives.
  let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute \"ng-"]

" Do not deselect after nudging a block
  vnoremap < <gv
  vnoremap > >gv

" <VIM-TMUX-NAV>
" move out to tmux pane if the next pane is a tmux pane
nnoremap <silent> <c-h> :TmuxNavigateLeft<cr>
nnoremap <silent> <c-j> :TmuxNavigateDown<cr>
nnoremap <silent> <c-k> :TmuxNavigateUp<cr>
nnoremap <silent> <c-l> :TmuxNavigateRight<cr>
nnoremap <silent> <c-\\> :TmuxNavigatePrevious<cr>
" </VIM-TMUX-NAV>

" Map rubocop (syntax analyzer)
" Requires 'rubocop' gem
let g:vimrubocop_keymap = 0
nmap <Leader>r :RuboCop<CR>

" Make ctrl-c behave like esc in insert and visual mode (because i am stupid like that)
inoremap <c-c> <Esc>
vnoremap <c-c> <Esc>
